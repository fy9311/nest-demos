基于vite的umijs项目迁移

问题 》对比 》实践 》优化

1.为什么放弃umi
	1.过于厚重，我们并没有用到dva等等
	2.升级受限，必须跟随主版本才能升级
	3.可配置化程度较低，无法自由应用业内新兴技术，
2.为什么选择vite，而不是webpack，rspack，turbopack
	1.rspack新出的，暂时观望
	2.turbopack目前还是早期阶段
	3.webpack，配置繁琐，在开发环境体验不如vite迅速，可以作为构建环境的一个补充
3.vite的迁入
	1.拆除umi
	2.针对项目入口等文件进行适配
	3.处理css及静态资源
4.踩坑
	略
5.vite的优化
	1.首屏优化
	2.资源加载优化


https://mp.weixin.qq.com/s/oroQSMSPxtSEfnjuxu2pew